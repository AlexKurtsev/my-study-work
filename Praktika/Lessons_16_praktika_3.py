# Задача 1. Матрица
# Дан вот такой список со списками:
#
# matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
#
# Реализуйте программу, которая выводит элементы этого списка в виде привычной нам матрицы.
#
#
#
# Результат работы программы:
# #
# # 1 2 3
# #
# # 4 5 6
# #
# # 7 8 9
# for i in matrix:
#     for j in i:
#         print(j, end=" ")
#     print()
# ################################################################3
#
# В олимпиаде по программированию участвует N человек, в списке участников
# они обозначаются под номерами 1, 2, 3, 4 и так далее до N. Эти участники
# поделены на команды по K человек.
#
# Напишите программу, которая принимает на вход количество участников и
# количество человек в каждой команде, затем генерирует список таких команд
# и выводит его на экран.
#
# Обеспечьте контроль ввода: в каждой команде должно быть ровно по K человек.
#
#
#
# Пример 1:
#
# Кол-во участников: 12
#
# Кол-во человек в команде: 4
#
#
#
# Общий список команд: [[1, 2 ,3, 4], [5, 6, 7, 8], [9, 10, 11, 12]]
#
#
#
# Пример 2:
#
# Кол-во участников: 12
#
# Кол-во человек в команде: 5


# 12 участников невозможно поделить на команды по 5 человек!
import math


def count_comands(men_com_lst, kol_mens, kol_comands):
    num = 1
    if kol_mens % kol_comands == 0:
        for i in range(1, kol_comands + 1):
            men_com_lst.append(list(range(num, kol_mens // kol_comands + num)))
            num += kol_mens // kol_comands

    if kol_mens % kol_comands != 0:
        print(
            f"{kol_mens} участников невозможно поделить на {kol_comands} команд по {math.ceil(kol_mens / kol_comands)} человек"
        )


def main():
    men_com_lst = []
    kol_mens = int(input("Количество участников: "))
    kol_comands = int(input("Количество команд: "))
    count_comands(men_com_lst, kol_mens, kol_comands)
    print(men_com_lst)


main()

# Задача 3. Лавка
# В небольшой фруктовой лавке у каждого фрукта есть название и цена.
# Эта информация хранится в одном большом списке, вот так:
#
# goods = [["яблоки", 50], ["апельсины", 190], ["груши", 100], ["нектарины", 200], ["бананы", 77]]
#
# Недавно в лавку привезли новый fruit_name по цене price, а после этого
# случилось ужасное: повысили налоги. А значит, повысились и цены на фрукты,
# на целых 8%!
#
# Реализуйте код, который добавляет в список goods ещё один список с новым
# фруктом и ценой (это запрашивается у пользователя), а затем увеличивает цены
# всех фруктов на 8%.
#
#
#
# Пример:
#
# Текущий ассортимент: [["яблоки", 50], ["апельсины", 190], ["груши", 100],
#                       ["нектарины", 200], ["бананы", 77]]
#
#
#
# Новый фрукт: абрикосы
#
# Цена: 150
#
#
#
# Новый ассортимент: [["яблоки", 50], ["апельсины", 190], ["груши", 100],
#                     ["нектарины", 200], ["бананы", 77], ["абрикосы", 150]]
#
#
#
# Новый ассортимент с увел. ценой: [['яблоки', 54.0], ['апельсины', 205.2],
#                                   ['груши', 108.0], ['нектарины', 216.0], ['бананы', 83.16],
#                                   ['абрикосы', 162.0]]


def add_fruit():
    goods.append([fruit_names, price])

    for i in range(len(goods)):
        goods[i][1] += goods[i][1] * 8 / 100


goods = [
    ["яблоки", 50],
    ["апельсины", 190],
    ["груши", 100],
    ["нектарины", 200],
    ["бананы", 77],
]
fruit_names = input("Введите новый фрукт: ")
price = int(input("Введите цену нового фрукта: "))

add_fruit()

print(f"Новый ассортимент: {goods}")
print(f"Новый ассортимент с увеличенной ценой: {goods}")
